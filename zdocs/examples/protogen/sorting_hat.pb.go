// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.13.0
// source: grpeakec_proto/docs/sorting_hat.proto

package protogen

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// House is the house a Wizard is getting sorted into.
type House int32

const (
	House_Gryffindor House = 0
	House_Hufflepuff House = 1
	House_Ravenclaw  House = 2
	House_Slytherin  House = 3
)

// Enum value maps for House.
var (
	House_name = map[int32]string{
		0: "Gryffindor",
		1: "Hufflepuff",
		2: "Ravenclaw",
		3: "Slytherin",
	}
	House_value = map[string]int32{
		"Gryffindor": 0,
		"Hufflepuff": 1,
		"Ravenclaw":  2,
		"Slytherin":  3,
	}
)

func (x House) Enum() *House {
	p := new(House)
	*p = x
	return p
}

func (x House) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (House) Descriptor() protoreflect.EnumDescriptor {
	return file_grpeakec_proto_docs_sorting_hat_proto_enumTypes[0].Descriptor()
}

func (House) Type() protoreflect.EnumType {
	return &file_grpeakec_proto_docs_sorting_hat_proto_enumTypes[0]
}

func (x House) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use House.Descriptor instead.
func (House) EnumDescriptor() ([]byte, []int) {
	return file_grpeakec_proto_docs_sorting_hat_proto_rawDescGZIP(), []int{0}
}

// Pupil is the wizard-to-be for sorting.
type Pupil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Pupil) Reset() {
	*x = Pupil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpeakec_proto_docs_sorting_hat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pupil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pupil) ProtoMessage() {}

func (x *Pupil) ProtoReflect() protoreflect.Message {
	mi := &file_grpeakec_proto_docs_sorting_hat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pupil.ProtoReflect.Descriptor instead.
func (*Pupil) Descriptor() ([]byte, []int) {
	return file_grpeakec_proto_docs_sorting_hat_proto_rawDescGZIP(), []int{0}
}

func (x *Pupil) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Sorted returns the House the pupil has been placed into.
type Sorted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	House House `protobuf:"varint,1,opt,name=house,proto3,enum=sortinghat.House" json:"house,omitempty"`
}

func (x *Sorted) Reset() {
	*x = Sorted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpeakec_proto_docs_sorting_hat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sorted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sorted) ProtoMessage() {}

func (x *Sorted) ProtoReflect() protoreflect.Message {
	mi := &file_grpeakec_proto_docs_sorting_hat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sorted.ProtoReflect.Descriptor instead.
func (*Sorted) Descriptor() ([]byte, []int) {
	return file_grpeakec_proto_docs_sorting_hat_proto_rawDescGZIP(), []int{1}
}

func (x *Sorted) GetHouse() House {
	if x != nil {
		return x.House
	}
	return House_Gryffindor
}

var File_grpeakec_proto_docs_sorting_hat_proto protoreflect.FileDescriptor

var file_grpeakec_proto_docs_sorting_hat_proto_rawDesc = []byte{
	0x0a, 0x25, 0x67, 0x72, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x63, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x64, 0x6f, 0x63, 0x73, 0x2f, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x61,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x68, 0x61, 0x74, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x05, 0x50, 0x75, 0x70, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x31, 0x0a, 0x06, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x68, 0x61, 0x74, 0x2e, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x05, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x2a, 0x45, 0x0a, 0x05, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x0a,
	0x47, 0x72, 0x79, 0x66, 0x66, 0x69, 0x6e, 0x64, 0x6f, 0x72, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x48, 0x75, 0x66, 0x66, 0x6c, 0x65, 0x70, 0x75, 0x66, 0x66, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x52, 0x61, 0x76, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x77, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x6c, 0x79, 0x74, 0x68, 0x65, 0x72, 0x69, 0x6e, 0x10, 0x03, 0x32, 0x3b, 0x0a, 0x0a, 0x53, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x11, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x68, 0x61, 0x74, 0x2e, 0x50, 0x75,
	0x70, 0x69, 0x6c, 0x1a, 0x12, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x68, 0x61, 0x74,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x31, 0x30, 0x30, 0x2f, 0x67,
	0x52, 0x50, 0x45, 0x41, 0x4b, 0x45, 0x43, 0x2d, 0x67, 0x6f, 0x2f, 0x7a, 0x64, 0x6f, 0x63, 0x73,
	0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x65, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpeakec_proto_docs_sorting_hat_proto_rawDescOnce sync.Once
	file_grpeakec_proto_docs_sorting_hat_proto_rawDescData = file_grpeakec_proto_docs_sorting_hat_proto_rawDesc
)

func file_grpeakec_proto_docs_sorting_hat_proto_rawDescGZIP() []byte {
	file_grpeakec_proto_docs_sorting_hat_proto_rawDescOnce.Do(func() {
		file_grpeakec_proto_docs_sorting_hat_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpeakec_proto_docs_sorting_hat_proto_rawDescData)
	})
	return file_grpeakec_proto_docs_sorting_hat_proto_rawDescData
}

var file_grpeakec_proto_docs_sorting_hat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpeakec_proto_docs_sorting_hat_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_grpeakec_proto_docs_sorting_hat_proto_goTypes = []interface{}{
	(House)(0),     // 0: sortinghat.House
	(*Pupil)(nil),  // 1: sortinghat.Pupil
	(*Sorted)(nil), // 2: sortinghat.Sorted
}
var file_grpeakec_proto_docs_sorting_hat_proto_depIdxs = []int32{
	0, // 0: sortinghat.Sorted.house:type_name -> sortinghat.House
	1, // 1: sortinghat.SortingHat.Sort:input_type -> sortinghat.Pupil
	2, // 2: sortinghat.SortingHat.Sort:output_type -> sortinghat.Sorted
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_grpeakec_proto_docs_sorting_hat_proto_init() }
func file_grpeakec_proto_docs_sorting_hat_proto_init() {
	if File_grpeakec_proto_docs_sorting_hat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpeakec_proto_docs_sorting_hat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pupil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpeakec_proto_docs_sorting_hat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sorted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpeakec_proto_docs_sorting_hat_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpeakec_proto_docs_sorting_hat_proto_goTypes,
		DependencyIndexes: file_grpeakec_proto_docs_sorting_hat_proto_depIdxs,
		EnumInfos:         file_grpeakec_proto_docs_sorting_hat_proto_enumTypes,
		MessageInfos:      file_grpeakec_proto_docs_sorting_hat_proto_msgTypes,
	}.Build()
	File_grpeakec_proto_docs_sorting_hat_proto = out.File
	file_grpeakec_proto_docs_sorting_hat_proto_rawDesc = nil
	file_grpeakec_proto_docs_sorting_hat_proto_goTypes = nil
	file_grpeakec_proto_docs_sorting_hat_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SortingHatClient is the client API for SortingHat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SortingHatClient interface {
	// Sort sorts the pupil into a house.
	Sort(ctx context.Context, in *Pupil, opts ...grpc.CallOption) (*Sorted, error)
}

type sortingHatClient struct {
	cc grpc.ClientConnInterface
}

func NewSortingHatClient(cc grpc.ClientConnInterface) SortingHatClient {
	return &sortingHatClient{cc}
}

func (c *sortingHatClient) Sort(ctx context.Context, in *Pupil, opts ...grpc.CallOption) (*Sorted, error) {
	out := new(Sorted)
	err := c.cc.Invoke(ctx, "/sortinghat.SortingHat/Sort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SortingHatServer is the server API for SortingHat service.
type SortingHatServer interface {
	// Sort sorts the pupil into a house.
	Sort(context.Context, *Pupil) (*Sorted, error)
}

// UnimplementedSortingHatServer can be embedded to have forward compatible implementations.
type UnimplementedSortingHatServer struct {
}

func (*UnimplementedSortingHatServer) Sort(context.Context, *Pupil) (*Sorted, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sort not implemented")
}

func RegisterSortingHatServer(s *grpc.Server, srv SortingHatServer) {
	s.RegisterService(&_SortingHat_serviceDesc, srv)
}

func _SortingHat_Sort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Pupil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SortingHatServer).Sort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sortinghat.SortingHat/Sort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SortingHatServer).Sort(ctx, req.(*Pupil))
	}
	return interceptor(ctx, in, info, handler)
}

var _SortingHat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sortinghat.SortingHat",
	HandlerType: (*SortingHatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sort",
			Handler:    _SortingHat_Sort_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpeakec_proto/docs/sorting_hat.proto",
}
